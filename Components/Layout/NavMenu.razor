<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <div>
            <a class="navbar-brand" href="">TodoApp</a>

        </div>
        <img src="Resources/Icons/darkmode.png"  id="darkLightToggle"@ref="DarkModeToggle" onclick="document.documentElement.setAttribute('data-bs-theme',document.documentElement.getAttribute('data-bs-theme') === 'dark' ? 'light': 'dark');" width="25px" height="25px" style="background-color: white; border-radius: 50%; margin-right: 75px" />

    </div>
</div>
<input type="checkbox" title="Navigation menu" class="navbar-toggler" style="padding-left: 10px" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <img src="Resources/Icons/house.svg" width="25px" height="25px" /> Home
            </NavLink>
            <NavLink class="nav-link" href="Settings">
                <img src="Resources/Icons/gear.svg" width="25px" height="25px" />Settings
            </NavLink>
        </div>
    </nav>
</div>
<script>
    window.TriggerDarkModeClick = () => {
        document.getElementById('darkLightToggle').click();
    }
</script>

@code
{
    public static ElementReference DarkModeToggle;
    
    protected override void OnInitialized()
    {
        var thread = new Thread(async () =>
        {
            Microsoft.JSInterop.IJSRuntime jsRef = JSRuntime;
            var settings = SettingsHelper.GetSettingsRecord();
            //change the app settingsRecord to their default
            if (settings.DefaultLighting == DefaultLighting.Light || (settings.DefaultLighting == DefaultLighting.SystemDefault && Application.Current.RequestedTheme == AppTheme.Light))
            {
                while (!await jsRef.InvokeAsync<bool>("DoesTagExistById", new object?[1] { "darkLightToggle" }))
                {
                    Thread.Sleep(100);
                }
                await jsRef.InvokeVoidAsync("TriggerDarkModeClick");
            }
           
        });
        thread.Start();


    }
}
